{
self,
isNixOSModule ? false,
}:
{
lib,
pkgs,
config,
...
}:
let
  cfg = config.programs.otter;
  tomlFmt = pkgs.formats.toml { };
  supportedSystems = [ "x86_64-linux" ];
  forAllSystems = pkgs.lib.genAttrs supportedSystems;
  pkgsFor = pkgs.legacyPackages;
in
  {
  options.programs.otter = {
    enable = lib.mkEnableOption "the otter program";

    package = lib.mkOption {
      type = lib.types.package;
      default = forAllSystems (system: {
        default = pkgsFor.${system}.callPackage ./default.nix { };
      });
      defaultText = lib.literalExpression "pkgs.otter";
      description = "otter package to use.";
    };

    settings = lib.mkOption {
      type = tomlFmt.type;
      default = { };
      example = lib.literalExpression ''
        [directories]
        images = "/home/abhi/pics/pictures/images"
        documents = "/home/abhi/docs"
        videos = "/home/abhi/videos"
      '';
      description = ''
        Configuration written to {file}`$XDG_CONFIG_HOME/otter/config.toml`.
      '';
    };
  };
  config = lib.mkIf cfg.enable {
    home.packages = [ cfg.package ];
    xdg.configFile."otter/config.toml" = lib.mkIf (cfg.settings != "") {
      text = ''
        # Generated by Home Manager.

        ${cfg.settings}
      '';
    };
  };
}
